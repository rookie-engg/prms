services:
  proxy:
    image: traefik:v2.11
    command: --providers.docker
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  backend:
    build:
      context: ./
      target: backend-dev
    environment:
      - ENV NODE_ENV=dev
    depends_on:
      mysql:
        condition: service_healthy
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /usr/local/app/
        - path: ./backend/package.json
          action: rebuild
      labels:
        traefik.http.routers.backend.rule: Host(`localhost`) && PathPrefix(`/api`)
        traefik.http.services.backend.loadbalancer.server.port: 8080
  
  client:
    build: 
      context: ./
      target: client-dev
    develop:
      watch:
        - path: .frontend/src
          action: sync
          target: /usr/local/app/src
        - path: ./frontend/package.json
          action: rebuild
    labels:
      traefik.http.routers.client.rule: Host(`localhost`)
      traefik.http.services.client.loadbalancer.server.port: 5173

  mysql:
    image: mysql:9.1.0
    # volumes:
    #   - prms-mysql-data:/var/lib/mysql
    environment: 
      MYSQL_DATABASE: prms
      MYSQL_ALLOW_EMPTY_PASSWORD: true
      MYSQL_ROOT_PASSWORD: ""
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 3s
      timeout: 3s
      retries: 3

  phpmyadmin:
    image: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ""
    labels:
      traefik.http.routers.phpmyadmin.rule: Host(`db.localhost`)
      traefik.http.services.phpmyadmin.loadbalancer.server.port: 80
  
volumes:
  prms-mysql-data: